.local		'floor'				; create new local 'floor'

getglobal	0,	'math'			; put math.floor() into the local 'floor'
gettable	0,	0,	'floor'

.proto 	"isPrime"				; New Proto named isPrime
	.optns	1,	1,	0,	7			; Set chunk options to 1 upvalue, 1 param, 0 vararg flag, and MAXSTACK 7
	.upval	'floor'

	pow		3, 	0,	(0.5)		; find squareroot of input
	getupval	2,	0					; get math.floor() from previous stack
	call		2,	2,	2				; call it, rounding down the sqrt of the input
	loadk		1,	(2)				; intial loop value
	mov		4,	1					; loop step
	loadk		6, 	(0)			; load value to compare to with modulus
L1:forprep	1,	L2					; start loop up, head to line 22
	mod		5,	0, 	5			; input % loop_counter == 0 ?
	eq		5,	5,	6
	jmp		L2						; if FALSE then continue loop
	loadbool	0,	0,	0				; if true, load FALSE and return
	return	0,	2
L2:forloop	1, 	L1
	loadbool	0,	1					; input is Prime! load true and return
	return	0,	2
.end

